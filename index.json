[{"content":"官方给出的部署教程比较简短,只有两行命令:\nnpm install -g yapi-cli --registry https://registry.npm.taobao.org yapi server 如果是新的Linux机器,跟着操作应该没什么问题,但是我在测试机和wsl上实操发现了一堆依赖问题,又是要更新node又是要装mongodb,所以不建议用yapi-cli来部署,能用docker尽量用docker.\n官方推荐的一个非官方docker部署方案: https://www.jianshu.com/p/a97d2efb23c5\n我部署完后发现这里还是有些小坑,所以顺带补充一些说明.\n运行 MongoDB # 创建存储卷 docker volume create mongo-data # 启动 MongoDB docker run -d \\  --name mongo-yapi \\  -v mongo-data:/data/db \\  -e MONGO_INITDB_ROOT_USERNAME=anoyi \\  -e MONGO_INITDB_ROOT_PASSWORD=anoyi.com \\  mongo # 进入mongodb docker exec -it mongo-yapi /bin/bash mongo #校验管理员账号,成功会返回1 use admin db.auth(\u0026#34;anoyi\u0026#34;,\u0026#34;anoyi.com\u0026#34;) 部署都尽可能用root账号,避免出现权限问题,如果命令中指定了目录,要确认对应的目录是否存在,否则也可能出问题.比如,这里要先创建好/data/db这个目录,否则校验mongodb账号的时候会失败.\nanoyi和anoyi.com就是mongodb的管理员账密,自己看着改\n获取YAPI镜像 docker pull registry.cn-hangzhou.aliyuncs.com/anoyi/yapi 自定义配置文件 vi /yapi/config.json # 输入以下内容 { \u0026#34;port\u0026#34;: \u0026#34;3000\u0026#34;, \u0026#34;adminAccount\u0026#34;: \u0026#34;admin@anoyi.com\u0026#34;, \u0026#34;timeout\u0026#34;:120000, \u0026#34;db\u0026#34;: { \u0026#34;servername\u0026#34;: \u0026#34;mongo\u0026#34;, \u0026#34;DATABASE\u0026#34;: \u0026#34;yapi\u0026#34;, \u0026#34;port\u0026#34;: 27017, \u0026#34;user\u0026#34;: \u0026#34;anoyi\u0026#34;, \u0026#34;pass\u0026#34;: \u0026#34;anoyi.com\u0026#34;, \u0026#34;authSource\u0026#34;: \u0026#34;admin\u0026#34; } } adminAccount即yapi的管理员账号,密码预设的是ymfe.org\n在官方的教程中有一段说只有超级管理员有权限创建分组,这里的超级管理员就是指的管理员,超级管理员可能是yapi历史的一个角色,但是现在没有了,文档没更新.官方的文档有很多落后的地方,比如其实任意新建的账号都能新建分组的.\nuser和pass是mongodb的管理员账密.\n初始化 YAPI 数据库索引及管理员账号 在/yapi的路径下输入\ndocker run -it --rm \\  --link mongo-yapi:mongo \\  --entrypoint npm \\  --workdir /yapi/vendors \\  -v $PWD/config.json:/yapi/config.json \\  registry.cn-hangzhou.aliyuncs.com/anoyi/yapi \\  run install-server 启动 Yapi 服务 在/yapi的路径下输入\ndocker run -d \\  --name yapi \\  --link mongo-yapi:mongo \\  --workdir /yapi/vendors \\  -p 3000:3000 \\  -v $PWD/config.json:/yapi/config.json \\  registry.cn-hangzhou.aliyuncs.com/anoyi/yapi \\  server/app.js 使用YAPI  访问： http://localhost:3000 登录账号：admin@anoyi.com 密码：ymfe.org  测接口的话要在chrome商店安装YApi-X插件\n","permalink":"http://euthpic.github.io/posts/deploy-yapi/","summary":"官方给出的部署教程比较简短,只有两行命令: npm install -g yapi-cli --registry https://registry.npm.taobao.org yapi server 如果是新的Linux机器,跟着操作应该没什么问题,但是我在测试机和wsl上实操发现","title":"部署yapi"},{"content":"为什么是hugo? 其实无所谓hugo还是hexo,我是为了paperMod这个皮肤才搭的这个博客.它排版简洁素雅,让注意力容易集中到内容本身,而且我特别喜欢点击文章的这个特效,有种按钮按下去的感觉.\n这些天在\u0026quot;十年之约\u0026quot;和\u0026quot;开往\u0026quot;中逛了很多博客,也算增长了一些见力.很多博客整得花里胡哨的,这种特效那种特效一个劲儿的往上面加,动画加载时间拉得那么长,完全不顾游客体验.就像刚学会化妆的小姑娘,妆容夸张而突兀,如果玩了一段时间博客后还是这种调调,也实在太没品味了.你品品,挂个天气在博客上面是想干嘛呢?\n回归正题,本文整理了搭建hugo,使用paperMod皮肤并发布到github page的简单过程.你看官网也是可以的,不过有些小坑官网的新手教程没提.\nhugo中文文档\npaperMod\n安装Hugo 二进制安装（推荐：简单、快速）  到 Hugo Releases 下载对应的操作系统版本的Hugo二进制文件（hugo或者hugo.exe） 把hugo.exe加到环境变量里  生成站点 $ hugo new site /my-blog $ cd /my-blog 站点目录结构:\n ▸ archetypes/\r▸ content/\r▸ layouts/\r▸ static/\rconfig.toml\rcontent是文章存放的目录,这里有个小坑,文档里面示范用的hyde皮肤能扫描content目录下的全部md文档,但是paperMod不行,paperMod只能读取/content/posts/下面的md文档,然后我搜了一下,还有些皮肤只支持/content/post,这里不同皮肤的规则比较混乱,使用时要注意文档位置是否正确.\nconfig.toml是配置文件,hugo官方用的是toml格式,有点冷门,然后paperMod又推荐回yml配置,得把toml改成yml.\n这里还需要自己创建个theme目录放皮肤.\n ▸ archetypes/\r▸ content/\r▸ layouts/\r▸ static/\r▸ theme/\rconfig.toml\r创建文章 创建第一篇文章放到post目录.\n$ hugo new posts/first.md 通过hugo创建的文章会有个默认头\ndate = \u0026quot;2015-10-25T08:36:54-07:00\u0026quot;\rtitle = \u0026quot;about\u0026quot;\rdraft = true\rdraft = true 表示草稿,得把这里改成false或者删掉后发布github才可见,或者想本地预览的话hugo server得加个\u0026ndash;buildDrafts参数\n安装皮肤 挑选一个皮肤然后clone下来.我有选择困难症,所以一开始是跳过下载皮肤直接运行hugo的,结果发现文章显示不了,一定得先下载个皮肤\n$ cd /theme $ git clone https://github.com/adityatelange/hugo-PaperMod.git 运行Hugo 在站点根目录启动本地预览\n$ hugo server --theme=hugo-PaperMod --buildDrafts 在config.yml里面指定皮肤后这里就不需要了.\n浏览器里打开： http://localhost:1313\n部署到Github 假设你需要部署在 GitHub Pages 上，首先在GitHub上创建一个Repository，命名为：xxxx.github.io （xxxx替换为你的github用户名）。\n在站点根目录执行 Hugo 命令生成最终页面：\n$ hugo --theme=hugo-PaperMod --baseUrl=\u0026#34;http://xxxx.github.io/\u0026#34; （注意，以上命令并不会生成草稿页面，如果未生成任何文章，请去掉文章头部的 draft=true 再重新生成。）\n如果一切顺利，所有静态页面都会生成到 public 目录，将pubilc目录里所有文件 push 到刚创建的Repository的 master 分支。\n$ cd public $ git init $ git remote add origin https://github.com/xxxx/xxxx.github.io.git $ git add -A $ git commit -m \u0026#34;first commit\u0026#34; $ git push -u origin master 浏览器里访问：http://xxxx.github.io/\n然后创建另一个github项目保存我们的源码,不要忘了在.gitignore里面把public目录加上.\n如果你需要在另一个设备上下载源码然后运行它,也不要忘了重新在theme目录里面重新clone皮肤\n","permalink":"http://euthpic.github.io/posts/learn-hugo/","summary":"为什么是hugo? 其实无所谓hugo还是hexo,我是为了paperMod这个皮肤才搭的这个博客.它排版简洁素雅,让注意力容易集中到内容本身","title":"用hugo搭建自己的博客"},{"content":"浅草才能没马蹄\n","permalink":"http://euthpic.github.io/posts/mmm/","summary":"浅草才能没马蹄","title":"乱花渐欲迷人眼"}]